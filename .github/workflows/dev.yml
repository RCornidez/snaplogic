name: validate dev branch and promote

on:
  push:
    branches: [ "dev" ]     
  workflow_dispatch:             

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # fetch just enough history for a two‑dot diff
          fetch-depth: 2

      - name: Get changed .slp files (git diff)
        id: diff
        shell: bash
        run: |
          # If it's the very first commit on the branch, before may be all zeros.
          BEFORE="${{ github.event.before }}"
          if [[ "$BEFORE" == "0000000000000000000000000000000000000000" ]]; then
            # Fall back to the parent of HEAD so diff still works.
            BEFORE=$(git rev-parse HEAD^)
          fi

          # List added/modified/renamed *.slp files between BEFORE…HEAD
          CHANGED=$(git diff --name-only "$BEFORE" ${{ github.sha }} -- '*.slp')

          # Expose as a multiline output
          {
            echo 'changed_files<<EOF'
            echo "$CHANGED"
            echo EOF
          } >> "$GITHUB_OUTPUT"

      - name: Validate pipelines with SnapLogic linter
        if: steps.diff.outputs.changed_files != ''
        env:
          BASE_URL:      ${{ vars.SNAP_API_BASE_URL }}
          AUTH_TOKEN:    ${{ secrets.SNAP_AUTH_TOKEN }}
          PROJECT_SPACE: ${{ vars.SNAP_PROJECT_SPACE }}
          DEV_PROJECT:   ${{ vars.SNAP_DEV_PROJECT }}
        shell: bash
        run: |
          set -euo pipefail

          echo "Changed .slp files:"
          while IFS= read -r FILE; do
            echo "• $FILE"

            PIPE_NAME=$(basename "$FILE" .slp)
            PIPE_SEGMENT=${PIPE_NAME// /%20}
            SPACE_SEGMENT=${PROJECT_SPACE// /%20}
            PROJ_SEGMENT=${DEV_PROJECT// /%20}

            API_PATH="$SPACE_SEGMENT/$PROJ_SEGMENT/$PIPE_SEGMENT"
            URL="${BASE_URL%/}/api/1/rest/public/pipeline/linter/$API_PATH"

            echo "Validating with: $URL"
            STATUS=$(curl -s -o response.json -w "%{http_code}" \
                         -X POST "$URL" \
                         -H "Authorization: Basic $AUTH_TOKEN" \
                         -H "Content-Type: application/json")

            if [ "$STATUS" -ne 200 ]; then
              echo "::error title=SnapLogic Linter::Validation failed for $FILE (HTTP $STATUS)"
              cat response.json || true
              exit 1
            fi

            echo "$FILE validated successfully"
          done <<< "${{ steps.diff.outputs.changed_files }}"

      - name: No pipeline changes
        if: steps.diff.outputs.changed_files == ''
        run: echo "No .slp files changed – skipping validation."
